{"version":3,"sources":["api/index.js","components/Chart/Chart.jsx","App.js","index.js","App.module.css"],"names":["url","config","headers","Authorization","fetchTransactions","a","baseUrl","transactions","axios","get","data","links","map","transaction","push","transactionDate","strftime","Date","attributes","createdAt","description","amount","parseFloat","value","transactionMonth","next","console","log","monthlyData","groupBy","reverse","collection","property","groupedData","reduce","acc","obj","Object","keys","date","Chart","barChart","length","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","width","height","options","onClick","e","_chart","tooltip","_data","datasetIndex","_datasetIndex","_index","maintainAspectRatio","App","state","fetchedTransactions","this","setState","className","styles","container","React","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"0QAGMA,EAAM,+BAGNC,EAAS,CACbC,QAAS,CACPC,cAAc,UAAD,OAHf,8IAgBWC,EAAiB,uCAAG,wCAAAC,EAAA,sDAC3BC,EAD2B,UACdN,EADc,gCAE3BO,EAAe,GAFY,gCAQjBC,IAAMC,IAAIH,EAASL,GARF,oBAOzBS,KAAQA,EAPiB,EAOjBA,KAAMC,EAPW,EAOXA,MAGhBD,EAAKE,KAAI,SAACC,GAaR,OAZAN,EAAaO,KAAK,CAChBC,gBAAiBC,IACf,KACA,IAAIC,KAAKJ,EAAYK,WAAWC,YAElCC,YAAaP,EAAYK,WAAWE,YACpCC,OAAQC,WAAWT,EAAYK,WAAWG,OAAOE,OACjDC,iBAAkBR,IAChB,QACA,IAAIC,KAAKJ,EAAYK,WAAWC,cAG7B,MAGTb,EAAUK,EAAMc,KA1BW,yDA4B3BC,QAAQC,IAAR,MA5B2B,gCA+BV,OAAZrB,EA/BsB,+BAiCvBsB,EAAcC,EAAQtB,EAAc,mBAAoB,UAjCjC,kBAkCtBqB,EAAYE,WAlCU,0DAAH,qDAsCvB,SAASD,EAAQE,EAAYC,EAAUT,GAC5C,IAAIU,EAAcF,EAAWG,QAAO,SAACC,EAAKC,GAKxC,OAJKD,EAAIC,EAAIJ,MACXG,EAAIC,EAAIJ,IAAa,GAEvBG,EAAIC,EAAIJ,KAAcI,EAAIb,GACnBY,IACN,IAMH,OAJAF,EAAcI,OAAOC,KAAKL,GAAarB,KAAI,SAAC2B,GAC1C,MAAO,CAAEA,OAAMlB,OAAQY,EAAYM,O,kBCzBxBC,EAxCD,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KACT+B,EAAW/B,EAAKgC,OACpB,kBAAC,MAAD,CACEhC,KAAM,CACJiC,OAAQjC,EAAKE,KAAI,qBAAG2B,QACpBK,SAAU,CACR,CACEC,MAAO,SACPC,gBAAiB,uBACjBC,YAAa,qBACbC,YAAa,EACbC,qBAAsB,uBACtBC,iBAAkB,qBAClBxC,KAAMA,EAAKE,KAAI,qBAAGS,aAIxB8B,MAAO,IACPC,OAAQ,IACRC,QAAS,CACPC,QAAS,SAACC,GACaA,EAAE,GAAGC,OAAOC,QAAQC,MAAjCd,SADO,IAETe,EAAeJ,EAAE,GAAGK,cACRL,EAAE,GAAGM,OAEvBnC,QAAQC,IAAIgC,IAEdG,qBAAqB,KAGvB,KAEJ,OACE,6BACE,qCACCrB,IChBQsB,E,4MAjBbC,MAAQ,CAAEtD,KAAM,I,kMAGoBN,I,OAA5B6D,E,OACNC,KAAKC,SAAS,CAAEzD,KAAMuD,I,qIAGd,IACAvD,EAASwD,KAAKF,MAAdtD,KACR,OACE,yBAAK0D,UAAWC,IAAOC,WACrB,kBAAC,EAAD,CAAO5D,KAAMA,S,GAZH6D,IAAMC,WCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCHjDC,EAAOC,QAAU,CAAC,UAAY,yB","file":"static/js/main.1c004903.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport strftime from \"strftime\";\r\n\r\nconst url = \"https://api.up.com.au/api/v1\";\r\nconst auth =\r\n  \"up:yeah:l19rnnYwHCG2HP4F1bdniAuDmZj1blK3H568oPcnWVpL56k5WUVRNOyBSZA2Dfr5JSa947pVyiFIgdLjUWVCKRG4TscLaTjgfKxfQXulj3Bdlsibw66WBqjg5BK4kssX\";\r\nconst config = {\r\n  headers: {\r\n    Authorization: `Bearer ${auth}`,\r\n  },\r\n};\r\n\r\nexport const fetchAccounts = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/accounts`, config);\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchTransactions = async () => {\r\n  let baseUrl = `${url}/transactions?page[size]=100`;\r\n  let transactions = [];\r\n\r\n  do {\r\n    try {\r\n      const {\r\n        data: { data, links },\r\n      } = await axios.get(baseUrl, config);\r\n\r\n      data.map((transaction) => {\r\n        transactions.push({\r\n          transactionDate: strftime(\r\n            \"%F\",\r\n            new Date(transaction.attributes.createdAt)\r\n          ),\r\n          description: transaction.attributes.description,\r\n          amount: parseFloat(transaction.attributes.amount.value),\r\n          transactionMonth: strftime(\r\n            \"%b %Y\",\r\n            new Date(transaction.attributes.createdAt)\r\n          ),\r\n        });\r\n        return [];\r\n      });\r\n\r\n      baseUrl = links.next;\r\n    } catch (error) {\r\n      console.log(error);\r\n      break;\r\n    }\r\n  } while (baseUrl !== null);\r\n  {\r\n    const monthlyData = groupBy(transactions, \"transactionMonth\", \"amount\");\r\n    return monthlyData.reverse();\r\n  }\r\n};\r\n\r\nexport function groupBy(collection, property, value) {\r\n  let groupedData = collection.reduce((acc, obj) => {\r\n    if (!acc[obj[property]]) {\r\n      acc[obj[property]] = 0;\r\n    }\r\n    acc[obj[property]] += obj[value];\r\n    return acc;\r\n  }, {});\r\n\r\n  groupedData = Object.keys(groupedData).map((date) => {\r\n    return { date, amount: groupedData[date] };\r\n  });\r\n\r\n  return groupedData;\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./Chart.module.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst Chart = ({ data }) => {\r\n  const barChart = data.length ? (\r\n    <Bar\r\n      data={{\r\n        labels: data.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            label: \"Amount\",\r\n            backgroundColor: \"rgba(255,99,132,0.2)\",\r\n            borderColor: \"rgba(255,99,132,1)\",\r\n            borderWidth: 1,\r\n            hoverBackgroundColor: \"rgba(255,99,132,0.4)\",\r\n            hoverBorderColor: \"rgba(255,99,132,1)\",\r\n            data: data.map(({ amount }) => amount),\r\n          },\r\n        ],\r\n      }}\r\n      width={1000}\r\n      height={100}\r\n      options={{\r\n        onClick: (e) => {\r\n          const { datasets } = e[0]._chart.tooltip._data;\r\n          const datasetIndex = e[0]._datasetIndex;\r\n          const dataIndex = e[0]._index;\r\n\r\n          console.log(datasetIndex);\r\n        },\r\n        maintainAspectRatio: false,\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div>\r\n      <h1>hello</h1>\r\n      {barChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport { fetchTransactions } from \"./api/index\";\r\nimport { Chart } from \"./components\";\r\n\r\nclass App extends React.Component {\r\n  state = { data: {} };\r\n\r\n  async componentDidMount() {\r\n    const fetchedTransactions = await fetchTransactions();\r\n    this.setState({ data: fetchedTransactions });\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        <Chart data={data} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__34yZA\"};"],"sourceRoot":""}